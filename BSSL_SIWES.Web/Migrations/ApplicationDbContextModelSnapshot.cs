// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiwesData;

namespace BSSL_SIWES.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SiwesData.Employer.EmployerSuperSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AreaOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfIncop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaOfficeId");

                    b.ToTable("EmployerSuperSetups");
                });

            modelBuilder.Entity("SiwesData.Employer.EmployerSupervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaOfficeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerSuperSetupId")
                        .HasColumnType("int");

                    b.Property<string>("IndBaseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndBaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerSuperSetupId");

                    b.ToTable("EmployerSupervisors");
                });

            modelBuilder.Entity("SiwesData.Menu.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("SiwesData.Menu.MenuAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubMenuId");

                    b.ToTable("MenuAccess");
                });

            modelBuilder.Entity("SiwesData.Menu.SubMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FormId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("SubMenu");
                });

            modelBuilder.Entity("SiwesData.Setup.AgencySuperSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeactDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deactivate")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfCPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgencySuperSetup");
                });

            modelBuilder.Entity("SiwesData.Setup.AreaOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AreaOffices");
                });

            modelBuilder.Entity("SiwesData.Setup.CourseGrpSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstTypeSetupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstTypeSetupId");

                    b.ToTable("CourseGrpSetup");
                });

            modelBuilder.Entity("SiwesData.Setup.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseGrpSetupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseGrpSetupId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SiwesData.Setup.InstCarryCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowDisporal")
                        .HasColumnType("bit");

                    b.Property<bool>("DelistInst")
                        .HasColumnType("bit");

                    b.Property<string>("InstypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MasterListDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxSiwesCap")
                        .HasColumnType("int");

                    b.Property<int>("MinVisit4Super")
                        .HasColumnType("int");

                    b.Property<bool>("MustNotExcCap")
                        .HasColumnType("bit");

                    b.Property<decimal>("StudentAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SuperAmt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("InstCarryCap");
                });

            modelBuilder.Entity("SiwesData.Setup.InstCatSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deactivate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstCatSetup");
                });

            modelBuilder.Entity("SiwesData.Setup.InstLevelStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("InstTypeSetupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstTypeSetupId");

                    b.ToTable("InstLevelStudy");
                });

            modelBuilder.Entity("SiwesData.Setup.InstTypeSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgencySuperSetupId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstCatSetupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgencySuperSetupId");

                    b.HasIndex("InstCatSetupId");

                    b.ToTable("InstTypeSetup");
                });

            modelBuilder.Entity("SiwesData.Setup.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliateInst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CapacityNo")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datedectivated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deactivate")
                        .HasColumnType("bit");

                    b.Property<int>("InstTypeSetupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstTypeSetupId");

                    b.ToTable("Institution");
                });

            modelBuilder.Entity("SiwesData.Setup.InstitutionOfficer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateActivated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deactivate")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("IntOfficerDesig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntOfficerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfStudent")
                        .HasColumnType("int");

                    b.Property<string>("OfficerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.Property<string>("SwitchCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("StatesId");

                    b.ToTable("InstitutionOfficers");
                });

            modelBuilder.Entity("SiwesData.Setup.LGA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("LGAs");
                });

            modelBuilder.Entity("SiwesData.Setup.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("SiwesData.Setup.NewCourseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstitiutionOfficerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InstitiutionOfficerId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("NewCourseRequests");
                });

            modelBuilder.Entity("SiwesData.Setup.PolicyTb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowDisporal")
                        .HasColumnType("bit");

                    b.Property<bool>("DelistInst")
                        .HasColumnType("bit");

                    b.Property<string>("InstypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MasterListDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxSiwesCap")
                        .HasColumnType("int");

                    b.Property<int>("MinVisit4Super")
                        .HasColumnType("int");

                    b.Property<bool>("MustNotExcCap")
                        .HasColumnType("bit");

                    b.Property<decimal>("StudentAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SuperAmt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PolicyTb");
                });

            modelBuilder.Entity("SiwesData.Setup.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalityId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SiwesData.Setup.SupervisoryAgency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyOfficerDesig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyOfficerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgencySuperSetupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateActivated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deactivate")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgencySuperSetupId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("StatesId");

                    b.ToTable("SupervisoryAgencies");
                });

            modelBuilder.Entity("SiwesData.Students.DailyActivities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CerifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployerSupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("StudentSetUpId")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerSupervisorId");

                    b.HasIndex("StudentSetUpId");

                    b.ToTable("DailyActivities");
                });

            modelBuilder.Entity("SiwesData.Students.DailyActivitiesList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DailyActivitiesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Day1")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day1Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Day2")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Day3")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day3Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Day4")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day4Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Day5")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day5Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DailyActivitiesId");

                    b.ToTable("DailyActivitiesLists");
                });

            modelBuilder.Entity("SiwesData.Students.Form8", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyAssessment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployerSupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("FutureEmploy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradingPerformance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradingPerformanceComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("InstSupApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("InstitutionOfficerId")
                        .HasColumnType("int");

                    b.Property<string>("Performance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonNot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentAccept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentInvolvement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentInvolvementComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentSetUpId")
                        .HasColumnType("int");

                    b.Property<bool>("SupApproved")
                        .HasColumnType("bit");

                    b.Property<string>("WorkExperience")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerSupervisorId");

                    b.HasIndex("InstitutionOfficerId");

                    b.HasIndex("StudentSetUpId");

                    b.ToTable("Form8");
                });

            modelBuilder.Entity("SiwesData.Students.MonthlyAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssessmentMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAssessed")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployerSupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("MonthlyRemarksByStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentSetUpId")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerSupervisorId");

                    b.HasIndex("StudentSetUpId");

                    b.ToTable("MonthlyAssessments");
                });

            modelBuilder.Entity("SiwesData.Students.Scaf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Commence_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Complete_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerSupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonSuspended")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentSetUpId")
                        .HasColumnType("int");

                    b.Property<bool>("Suspended")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployerSupervisorId");

                    b.HasIndex("StudentSetUpId");

                    b.ToTable("Scafs");
                });

            modelBuilder.Entity("SiwesData.Students.StudentSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Attached")
                        .HasColumnType("bit");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstitutionOfficerId")
                        .HasColumnType("int");

                    b.Property<string>("MatricNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatricYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonSuspended")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiwesYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StudentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Suspended")
                        .HasColumnType("bit");

                    b.Property<string>("YearOfStudy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesId");

                    b.HasIndex("InstitutionOfficerId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("StateId");

                    b.ToTable("StudentSetUps");
                });

            modelBuilder.Entity("SiwesData.Students.SupervisorVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaToImprove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateVisited")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentInvolvement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentSetUpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentSetUpId");

                    b.ToTable("SupervisorVisits");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Employer.EmployerSuperSetup", b =>
                {
                    b.HasOne("SiwesData.Setup.AreaOffice", "AreaOffice")
                        .WithMany()
                        .HasForeignKey("AreaOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Employer.EmployerSupervisor", b =>
                {
                    b.HasOne("SiwesData.Employer.EmployerSuperSetup", "EmployerSuperSetup")
                        .WithMany()
                        .HasForeignKey("EmployerSuperSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Menu.MenuAccess", b =>
                {
                    b.HasOne("SiwesData.Menu.SubMenu", "SubMenu")
                        .WithMany()
                        .HasForeignKey("SubMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Menu.SubMenu", b =>
                {
                    b.HasOne("SiwesData.Menu.Menu", "Menu")
                        .WithMany("SubMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.CourseGrpSetup", b =>
                {
                    b.HasOne("SiwesData.Setup.InstTypeSetup", "InstTypeSetup")
                        .WithMany("CourseGrpSetups")
                        .HasForeignKey("InstTypeSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.Courses", b =>
                {
                    b.HasOne("SiwesData.Setup.CourseGrpSetup", "CourseGrpSetup")
                        .WithMany()
                        .HasForeignKey("CourseGrpSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.InstLevelStudy", b =>
                {
                    b.HasOne("SiwesData.Setup.InstTypeSetup", "InstTypeSetup")
                        .WithMany()
                        .HasForeignKey("InstTypeSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.InstTypeSetup", b =>
                {
                    b.HasOne("SiwesData.Setup.AgencySuperSetup", "AgencySuperSetup")
                        .WithMany()
                        .HasForeignKey("AgencySuperSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiwesData.Setup.InstCatSetup", "InstCatSetup")
                        .WithMany("InstTypes")
                        .HasForeignKey("InstCatSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.Institution", b =>
                {
                    b.HasOne("SiwesData.Setup.InstTypeSetup", "InstTypeSetup")
                        .WithMany()
                        .HasForeignKey("InstTypeSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.InstitutionOfficer", b =>
                {
                    b.HasOne("SiwesData.Setup.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiwesData.Setup.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("SiwesData.Setup.State", "States")
                        .WithMany()
                        .HasForeignKey("StatesId");
                });

            modelBuilder.Entity("SiwesData.Setup.LGA", b =>
                {
                    b.HasOne("SiwesData.Setup.State", "State")
                        .WithMany("LGAs")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.NewCourseRequest", b =>
                {
                    b.HasOne("SiwesData.Setup.InstitutionOfficer", "InstitiutionOfficer")
                        .WithMany()
                        .HasForeignKey("InstitiutionOfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.State", b =>
                {
                    b.HasOne("SiwesData.Setup.Nationality", "Nationality")
                        .WithMany("States")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Setup.SupervisoryAgency", b =>
                {
                    b.HasOne("SiwesData.Setup.AgencySuperSetup", "AgencySuperSetup")
                        .WithMany()
                        .HasForeignKey("AgencySuperSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiwesData.Setup.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("SiwesData.Setup.State", "States")
                        .WithMany()
                        .HasForeignKey("StatesId");
                });

            modelBuilder.Entity("SiwesData.Students.DailyActivities", b =>
                {
                    b.HasOne("SiwesData.Employer.EmployerSupervisor", "EmployerSupervisor")
                        .WithMany()
                        .HasForeignKey("EmployerSupervisorId");

                    b.HasOne("SiwesData.Students.StudentSetUp", "StudentSetUp")
                        .WithMany()
                        .HasForeignKey("StudentSetUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Students.DailyActivitiesList", b =>
                {
                    b.HasOne("SiwesData.Students.DailyActivities", "DailyActivities")
                        .WithMany("DailyActivitiesLists")
                        .HasForeignKey("DailyActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Students.Form8", b =>
                {
                    b.HasOne("SiwesData.Employer.EmployerSupervisor", "EmployerSupervisor")
                        .WithMany()
                        .HasForeignKey("EmployerSupervisorId");

                    b.HasOne("SiwesData.Setup.InstitutionOfficer", "InstitutionOfficer")
                        .WithMany()
                        .HasForeignKey("InstitutionOfficerId");

                    b.HasOne("SiwesData.Students.StudentSetUp", "StudentSetUp")
                        .WithMany()
                        .HasForeignKey("StudentSetUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Students.MonthlyAssessment", b =>
                {
                    b.HasOne("SiwesData.Employer.EmployerSupervisor", "EmployerSupervisor")
                        .WithMany()
                        .HasForeignKey("EmployerSupervisorId");

                    b.HasOne("SiwesData.Students.StudentSetUp", "StudentSetUp")
                        .WithMany()
                        .HasForeignKey("StudentSetUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Students.Scaf", b =>
                {
                    b.HasOne("SiwesData.Employer.EmployerSupervisor", "EmployerSupervisor")
                        .WithMany()
                        .HasForeignKey("EmployerSupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiwesData.Students.StudentSetUp", "StudentSetUp")
                        .WithMany()
                        .HasForeignKey("StudentSetUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiwesData.Students.StudentSetUp", b =>
                {
                    b.HasOne("SiwesData.Setup.Courses", "Courses")
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiwesData.Setup.InstitutionOfficer", "InstitutionOfficer")
                        .WithMany()
                        .HasForeignKey("InstitutionOfficerId");

                    b.HasOne("SiwesData.Setup.Nationality", "Nationalities")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("SiwesData.Setup.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("SiwesData.Students.SupervisorVisit", b =>
                {
                    b.HasOne("SiwesData.Students.StudentSetUp", "StudentSetUp")
                        .WithMany()
                        .HasForeignKey("StudentSetUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
